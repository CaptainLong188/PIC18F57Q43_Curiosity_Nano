

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 09 23:42:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 18/12/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F57Q43 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	idataCOMRAM
    55   00279C                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _display1
    59   00279C  03                 	db	3
    60   00279D  04                 	db	4
    61   00279E  02                 	db	2
    62   00279F  07                 	db	7
    63   0027A0  00                 	db	0
    64   0027A1  01                 	db	1
    65   0027A2  02                 	db	2
    66   0027A3  00                 	db	0
    67                           
    68                           	psect	smallconst
    69   002500                     __psmallconst:
    70                           	callstack 0
    71   002500  00                 	db	0
    72   002501                     _display7seg_c:
    73                           	callstack 0
    74   002501  3F                 	db	63
    75   002502  06                 	db	6
    76   002503  5B                 	db	91
    77   002504  4F                 	db	79
    78   002505  66                 	db	102
    79   002506  6D                 	db	109
    80   002507  7D                 	db	125
    81   002508  07                 	db	7
    82   002509  7F                 	db	127
    83   00250A  67                 	db	103
    84   00250B                     __end_of_display7seg_c:
    85                           	callstack 0
    86   000000                     _LATD	set	1217
    87   000000                     _TRISDbits	set	1225
    88   000000                     _WPUDbits	set	1049
    89   000000                     _ODCONDbits	set	1050
    90   000000                     _SLRCONDbits	set	1051
    91   000000                     _WPUCbits	set	1041
    92   000000                     _ODCONCbits	set	1042
    93   000000                     _SLRCONCbits	set	1043
    94   000000                     _WPUEbits	set	1057
    95   000000                     _ODCONEbits	set	1058
    96   000000                     _SLRCONEbits	set	1059
    97   000000                     _WPUAbits	set	1025
    98   000000                     _ODCONAbits	set	1026
    99   000000                     _SLRCONAbits	set	1027
   100   000000                     _LATDbits	set	1217
   101   000000                     _LATCbits	set	1216
   102   000000                     _LATEbits	set	1218
   103   000000                     _LATAbits	set	1214
   104   000000                     _OSCCON1	set	173
   105   000000                     _ANSELAbits	set	1024
   106   000000                     _ANSELCbits	set	1040
   107   000000                     _ANSELEbits	set	1056
   108   000000                     _TRISAbits	set	1222
   109   000000                     _INLVLAbits	set	1028
   110   000000                     _TRISCbits	set	1224
   111   000000                     _TRISEbits	set	1226
   112   000000                     _LATA	set	1214
   113   000000                     _INLVLEbits	set	1060
   114   000000                     _PORTBbits	set	1231
   115   000000                     _ANSELDbits	set	1048
   116   000000                     _INLVLCbits	set	1044
   117   000000                     _INLVLDbits	set	1052
   118   000000                     _PORTCbits	set	1232
   119   000000                     _LATC	set	1216
   120   000000                     _LATE	set	1218
   121   00250B  00                 	db	0	; dummy byte at the end
   122   000000                     
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126   002766                     __pcinit:
   127                           	callstack 0
   128   002766                     start_initialization:
   129                           	callstack 0
   130   002766                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Initialize objects allocated to COMRAM (8 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135   002766  0E9C               	movlw	low __pidataCOMRAM
   136   002768  6EF6               	movwf	tblptrl,c
   137   00276A  0E27               	movlw	high __pidataCOMRAM
   138   00276C  6EF7               	movwf	tblptrh,c
   139   00276E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140   002770  6EF8               	movwf	tblptru,c
   141   002772  EE01  F10F         	lfsr	0,__pdataCOMRAM
   142   002776  EE10 F008          	lfsr	1,8
   143   00277A                     copy_data0:
   144   00277A  0009               	tblrd		*+
   145   00277C  C4F5 F4EE          	movff	tablat,postinc0
   146   002780  50E5               	movf	postdec1,w,c
   147   002782  50E1               	movf	fsr1l,w,c
   148   002784  E1FA               	bnz	copy_data0
   149   002786                     end_of_initialization:
   150                           	callstack 0
   151   002786                     __end_of__initialization:
   152                           	callstack 0
   153   002786  0100               	movlb	0
   154   002788  EF8A  F013         	goto	_main	;jump to C main() function
   155                           
   156                           	psect	dataCOMRAM
   157   00050F                     __pdataCOMRAM:
   158                           	callstack 0
   159   00050F                     _display1:
   160                           	callstack 0
   161   00050F                     	ds	8
   162                           
   163                           	psect	cstackCOMRAM
   164   000501                     __pcstackCOMRAM:
   165                           	callstack 0
   166   000501                     Write_Display7seg@d7s:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0x0
   170   000501                     	ds	2
   171   000503                     Write_Display7seg@val:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x2
   175   000503                     	ds	1
   176   000504                     ??_Write_Display7seg:
   177                           
   178                           ; 1 bytes @ 0x3
   179   000504                     	ds	2
   180   000506                     Write_Display7seg@data:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x5
   184   000506                     	ds	1
   185   000507                     
   186                           ; 2 bytes @ 0x6
   187   000507                     	ds	2
   188   000509                     
   189                           ; 3 bytes @ 0x8
   190   000509                     	ds	3
   191   00050C                     ??_main:
   192                           
   193                           ; 1 bytes @ 0xB
   194   00050C                     	ds	2
   195   00050E                     main@i:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0xD
   199   00050E                     	ds	1
   200                           
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 12 in file "main.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;  argc            2    6[COMRAM] int 
   209 ;;  argv            3    8[COMRAM] PTR PTR unsigned char 
   210 ;; Auto vars:     Size  Location     Type
   211 ;;  i               1   13[COMRAM] unsigned char 
   212 ;; Return value:  Size  Location     Type
   213 ;;                  2    6[COMRAM] int 
   214 ;; Registers used:
   215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   216 ;; Tracked objects:
   217 ;;		On entry : 0/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   221 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   224 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   225 ;;Total ram usage:        8 bytes
   226 ;; Hardware stack levels required when called: 2
   227 ;; This function calls:
   228 ;;		_Clock_Init
   229 ;;		_GPIO_Init
   230 ;;		_Reset_Display7Seg
   231 ;;		_Write_Display7seg
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text0
   238   002714                     __ptext0:
   239                           	callstack 0
   240   002714                     _main:
   241                           	callstack 125
   242   002714                     
   243                           ;main.c: 14:     Clock_Init();
   244   002714  ECD2  F013         	call	_Clock_Init	;wreg free
   245   002718                     
   246                           ;main.c: 15:     GPIO_Init();
   247   002718  EC5E  F013         	call	_GPIO_Init	;wreg free
   248   00271C                     
   249                           ;main.c: 16:     Reset_Display7Seg();
   250   00271C  ECC6  F013         	call	_Reset_Display7Seg	;wreg free
   251   002720                     l913:
   252                           
   253                           ;main.c: 19:     {;main.c: 20:         for(uint8_t i = 0; i < 10; ++i)
   254   002720  0E00               	movlw	0
   255   002722  6E0E               	movwf	main@i^(0+1280),c
   256   002724                     l919:
   257                           
   258                           ;main.c: 21:         {;main.c: 22:             Write_Display7seg(&display1, i);
   259   002724  0E0F               	movlw	low _display1
   260   002726  6E01               	movwf	Write_Display7seg@d7s^(0+1280),c
   261   002728  0E05               	movlw	high _display1
   262   00272A  6E02               	movwf	(Write_Display7seg@d7s+1)^(0+1280),c
   263   00272C  C50E  F503         	movff	main@i,Write_Display7seg@val
   264   002730  EC86  F012         	call	_Write_Display7seg	;wreg free
   265   002734                     
   266                           ;main.c: 23:             _delay((unsigned long)((1000)*(64000000UL/4000.0)));
   267   002734  0E52               	movlw	82
   268   002736  6E0D               	movwf	(??_main+1)^(0+1280),c
   269   002738  0E2B               	movlw	43
   270   00273A  6E0C               	movwf	??_main^(0+1280),c
   271   00273C  0E00               	movlw	0
   272   00273E                     u337:
   273   00273E  2EE8               	decfsz	wreg,f,c
   274   002740  D7FE               	bra	u337
   275   002742  2E0C               	decfsz	??_main^(0+1280),f,c
   276   002744  D7FC               	bra	u337
   277   002746  2E0D               	decfsz	(??_main+1)^(0+1280),f,c
   278   002748  D7FA               	bra	u337
   279   00274A  D000               	nop2	
   280   00274C                     
   281                           ;main.c: 24:         }
   282   00274C  2A0E               	incf	main@i^(0+1280),f,c
   283   00274E  0E09               	movlw	9
   284   002750  640E               	cpfsgt	main@i^(0+1280),c
   285   002752  EFAD  F013         	goto	u321
   286   002756  EFAF  F013         	goto	u320
   287   00275A                     u321:
   288   00275A  EF92  F013         	goto	l919
   289   00275E                     u320:
   290   00275E  EF90  F013         	goto	l913
   291   002762  EFFE  F0FF         	goto	start
   292   002766                     __end_of_main:
   293                           	callstack 0
   294                           
   295 ;; *************** function _Write_Display7seg *****************
   296 ;; Defined at:
   297 ;;		line 3 in file "display7.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;  d7s             2    0[COMRAM] PTR struct .
   300 ;;		 -> display1(8), 
   301 ;;  val             1    2[COMRAM] unsigned char 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  data            1    5[COMRAM] unsigned char 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   313 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   317 ;;Total ram usage:        6 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 1
   320 ;; This function calls:
   321 ;;		_Reset_Display7Seg
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328   00250C                     __ptext1:
   329                           	callstack 0
   330   00250C                     _Write_Display7seg:
   331                           	callstack 125
   332   00250C                     
   333                           ;display7.c: 3: void Write_Display7seg(display7seg_t* d7s, uint8_t val);display7.c: 4: {
      +                          ;display7.c: 5:     uint8_t data;;display7.c: 7:     if((d7s -> mode) == 0)
   334   00250C  EE20 F007          	lfsr	2,7
   335   002510  5001               	movf	Write_Display7seg@d7s^(0+1280),w,c
   336   002512  26D9               	addwf	fsr2l,f,c
   337   002514  5002               	movf	(Write_Display7seg@d7s+1)^(0+1280),w,c
   338   002516  22DA               	addwfc	fsr2h,f,c
   339   002518  50DF               	movf	indf2,w,c
   340   00251A  A4D8               	btfss	status,2,c
   341   00251C  EF92  F012         	goto	u171
   342   002520  EF94  F012         	goto	u170
   343   002524                     u171:
   344   002524  EFA0  F012         	goto	l877
   345   002528                     u170:
   346   002528                     
   347                           ;display7.c: 8:     {;display7.c: 9:         data = display7seg_c[val];
   348   002528  5003               	movf	Write_Display7seg@val^(0+1280),w,c
   349   00252A  0F01               	addlw	low _display7seg_c
   350   00252C  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   351   00252E  C504  F4F6         	movff	??_Write_Display7seg,tblptrl
   352   002532                     	if	1	;There is more than 1 active tblptr byte
   353   002532  0E25               	movlw	high __smallconst
   354   002534  6EF7               	movwf	tblptrh,c
   355   002536                     	endif
   356   002536                     	if	0	;tblptru may be non-zero
   357   002536                     	endif
   358   002536                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   359   002536  0E00               	movlw	low (__smallconst shr (0+16))
   360   002538  6EF8               	movwf	tblptru,c
   361   00253A                     	endif
   362   00253A  0008               	tblrd		*
   363   00253C  C4F5 F506          	movff	tablat,Write_Display7seg@data
   364   002540                     l877:
   365                           
   366                           ;display7.c: 12:     Reset_Display7Seg();
   367   002540  ECC6  F013         	call	_Reset_Display7Seg	;wreg free
   368   002544                     
   369                           ;display7.c: 14:     if(data & 1 << 0) {LATA |= 1 << (d7s -> a);}
   370   002544  A006               	btfss	Write_Display7seg@data^(0+1280),0,c
   371   002546  EFA7  F012         	goto	u181
   372   00254A  EFA9  F012         	goto	u180
   373   00254E                     u181:
   374   00254E  EFBB  F012         	goto	l883
   375   002552                     u180:
   376   002552  C501  F4D9         	movff	Write_Display7seg@d7s,fsr2l
   377   002556  C502  F4DA         	movff	Write_Display7seg@d7s+1,fsr2h
   378   00255A  50DF               	movf	indf2,w,c
   379   00255C  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   380   00255E  0E01               	movlw	1
   381   002560  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   382   002562  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   383   002564  EFB6  F012         	goto	u194
   384   002568                     u195:
   385   002568  90D8               	bcf	status,0,c
   386   00256A  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   387   00256C                     u194:
   388   00256C  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   389   00256E  EFB4  F012         	goto	u195
   390   002572  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   391   002574  12BE               	iorwf	190,f,c	;volatile
   392   002576                     l883:
   393                           
   394                           ;display7.c: 15:     if(data & 1 << 1) {LATA |= 1 << (d7s -> b);}
   395   002576  A206               	btfss	Write_Display7seg@data^(0+1280),1,c
   396   002578  EFC0  F012         	goto	u201
   397   00257C  EFC2  F012         	goto	u200
   398   002580                     u201:
   399   002580  EFD6  F012         	goto	l887
   400   002584                     u200:
   401   002584  EE20 F001          	lfsr	2,1
   402   002588  5001               	movf	Write_Display7seg@d7s^(0+1280),w,c
   403   00258A  26D9               	addwf	fsr2l,f,c
   404   00258C  5002               	movf	(Write_Display7seg@d7s+1)^(0+1280),w,c
   405   00258E  22DA               	addwfc	fsr2h,f,c
   406   002590  50DF               	movf	indf2,w,c
   407   002592  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   408   002594  0E01               	movlw	1
   409   002596  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   410   002598  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   411   00259A  EFD1  F012         	goto	u214
   412   00259E                     u215:
   413   00259E  90D8               	bcf	status,0,c
   414   0025A0  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   415   0025A2                     u214:
   416   0025A2  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   417   0025A4  EFCF  F012         	goto	u215
   418   0025A8  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   419   0025AA  12BE               	iorwf	190,f,c	;volatile
   420   0025AC                     l887:
   421                           
   422                           ;display7.c: 16:     if(data & 1 << 2) {LATE |= 1 << (d7s -> c);}
   423   0025AC  A406               	btfss	Write_Display7seg@data^(0+1280),2,c
   424   0025AE  EFDB  F012         	goto	u221
   425   0025B2  EFDD  F012         	goto	u220
   426   0025B6                     u221:
   427   0025B6  EFF1  F012         	goto	l891
   428   0025BA                     u220:
   429   0025BA  EE20 F002          	lfsr	2,2
   430   0025BE  5001               	movf	Write_Display7seg@d7s^(0+1280),w,c
   431   0025C0  26D9               	addwf	fsr2l,f,c
   432   0025C2  5002               	movf	(Write_Display7seg@d7s+1)^(0+1280),w,c
   433   0025C4  22DA               	addwfc	fsr2h,f,c
   434   0025C6  50DF               	movf	indf2,w,c
   435   0025C8  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   436   0025CA  0E01               	movlw	1
   437   0025CC  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   438   0025CE  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   439   0025D0  EFEC  F012         	goto	u234
   440   0025D4                     u235:
   441   0025D4  90D8               	bcf	status,0,c
   442   0025D6  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   443   0025D8                     u234:
   444   0025D8  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   445   0025DA  EFEA  F012         	goto	u235
   446   0025DE  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   447   0025E0  12C2               	iorwf	194,f,c	;volatile
   448   0025E2                     l891:
   449                           
   450                           ;display7.c: 17:     if(data & 1 << 3) {LATC |= 1 << (d7s -> d);}
   451   0025E2  A606               	btfss	Write_Display7seg@data^(0+1280),3,c
   452   0025E4  EFF6  F012         	goto	u241
   453   0025E8  EFF8  F012         	goto	u240
   454   0025EC                     u241:
   455   0025EC  EF0C  F013         	goto	l895
   456   0025F0                     u240:
   457   0025F0  EE20 F003          	lfsr	2,3
   458   0025F4  5001               	movf	Write_Display7seg@d7s^(0+1280),w,c
   459   0025F6  26D9               	addwf	fsr2l,f,c
   460   0025F8  5002               	movf	(Write_Display7seg@d7s+1)^(0+1280),w,c
   461   0025FA  22DA               	addwfc	fsr2h,f,c
   462   0025FC  50DF               	movf	indf2,w,c
   463   0025FE  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   464   002600  0E01               	movlw	1
   465   002602  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   466   002604  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   467   002606  EF07  F013         	goto	u254
   468   00260A                     u255:
   469   00260A  90D8               	bcf	status,0,c
   470   00260C  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   471   00260E                     u254:
   472   00260E  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   473   002610  EF05  F013         	goto	u255
   474   002614  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   475   002616  12C0               	iorwf	192,f,c	;volatile
   476   002618                     l895:
   477                           
   478                           ;display7.c: 18:     if(data & 1 << 4) {LATD |= 1 << (d7s -> e);}
   479   002618  A806               	btfss	Write_Display7seg@data^(0+1280),4,c
   480   00261A  EF11  F013         	goto	u261
   481   00261E  EF13  F013         	goto	u260
   482   002622                     u261:
   483   002622  EF27  F013         	goto	l899
   484   002626                     u260:
   485   002626  EE20 F004          	lfsr	2,4
   486   00262A  5001               	movf	Write_Display7seg@d7s^(0+1280),w,c
   487   00262C  26D9               	addwf	fsr2l,f,c
   488   00262E  5002               	movf	(Write_Display7seg@d7s+1)^(0+1280),w,c
   489   002630  22DA               	addwfc	fsr2h,f,c
   490   002632  50DF               	movf	indf2,w,c
   491   002634  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   492   002636  0E01               	movlw	1
   493   002638  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   494   00263A  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   495   00263C  EF22  F013         	goto	u274
   496   002640                     u275:
   497   002640  90D8               	bcf	status,0,c
   498   002642  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   499   002644                     u274:
   500   002644  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   501   002646  EF20  F013         	goto	u275
   502   00264A  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   503   00264C  12C1               	iorwf	193,f,c	;volatile
   504   00264E                     l899:
   505                           
   506                           ;display7.c: 19:     if(data & 1 << 5) {LATD |= 1 << (d7s -> f);}
   507   00264E  AA06               	btfss	Write_Display7seg@data^(0+1280),5,c
   508   002650  EF2C  F013         	goto	u281
   509   002654  EF2E  F013         	goto	u280
   510   002658                     u281:
   511   002658  EF42  F013         	goto	l903
   512   00265C                     u280:
   513   00265C  EE20 F005          	lfsr	2,5
   514   002660  5001               	movf	Write_Display7seg@d7s^(0+1280),w,c
   515   002662  26D9               	addwf	fsr2l,f,c
   516   002664  5002               	movf	(Write_Display7seg@d7s+1)^(0+1280),w,c
   517   002666  22DA               	addwfc	fsr2h,f,c
   518   002668  50DF               	movf	indf2,w,c
   519   00266A  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   520   00266C  0E01               	movlw	1
   521   00266E  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   522   002670  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   523   002672  EF3D  F013         	goto	u294
   524   002676                     u295:
   525   002676  90D8               	bcf	status,0,c
   526   002678  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   527   00267A                     u294:
   528   00267A  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   529   00267C  EF3B  F013         	goto	u295
   530   002680  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   531   002682  12C1               	iorwf	193,f,c	;volatile
   532   002684                     l903:
   533                           
   534                           ;display7.c: 20:     if(data & 1 << 6) {LATD |= 1 << (d7s -> g);}
   535   002684  AC06               	btfss	Write_Display7seg@data^(0+1280),6,c
   536   002686  EF47  F013         	goto	u301
   537   00268A  EF49  F013         	goto	u300
   538   00268E                     u301:
   539   00268E  EF5D  F013         	goto	l124
   540   002692                     u300:
   541   002692  EE20 F006          	lfsr	2,6
   542   002696  5001               	movf	Write_Display7seg@d7s^(0+1280),w,c
   543   002698  26D9               	addwf	fsr2l,f,c
   544   00269A  5002               	movf	(Write_Display7seg@d7s+1)^(0+1280),w,c
   545   00269C  22DA               	addwfc	fsr2h,f,c
   546   00269E  50DF               	movf	indf2,w,c
   547   0026A0  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   548   0026A2  0E01               	movlw	1
   549   0026A4  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   550   0026A6  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   551   0026A8  EF58  F013         	goto	u314
   552   0026AC                     u315:
   553   0026AC  90D8               	bcf	status,0,c
   554   0026AE  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   555   0026B0                     u314:
   556   0026B0  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   557   0026B2  EF56  F013         	goto	u315
   558   0026B6  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   559   0026B8  12C1               	iorwf	193,f,c	;volatile
   560   0026BA                     l124:
   561   0026BA  0012               	return		;funcret
   562   0026BC                     __end_of_Write_Display7seg:
   563                           	callstack 0
   564                           
   565 ;; *************** function _Reset_Display7Seg *****************
   566 ;; Defined at:
   567 ;;		line 24 in file "display7.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		None
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;;		_Write_Display7seg
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text2
   596   00278C                     __ptext2:
   597                           	callstack 0
   598   00278C                     _Reset_Display7Seg:
   599                           	callstack 125
   600   00278C                     
   601                           ;display7.c: 26:     LATAbits.LATA3 = 0;
   602   00278C  96BE               	bcf	190,3,c	;volatile
   603                           
   604                           ;display7.c: 27:     LATAbits.LATA4 = 0;
   605   00278E  98BE               	bcf	190,4,c	;volatile
   606                           
   607                           ;display7.c: 28:     LATEbits.LATE2 = 0;
   608   002790  94C2               	bcf	194,2,c	;volatile
   609                           
   610                           ;display7.c: 29:     LATCbits.LATC7 = 0;
   611   002792  9EC0               	bcf	192,7,c	;volatile
   612                           
   613                           ;display7.c: 30:     LATDbits.LATD0 = 0;
   614   002794  90C1               	bcf	193,0,c	;volatile
   615                           
   616                           ;display7.c: 31:     LATDbits.LATD1 = 0;
   617   002796  92C1               	bcf	193,1,c	;volatile
   618                           
   619                           ;display7.c: 32:     LATDbits.LATD2 = 0;
   620   002798  94C1               	bcf	193,2,c	;volatile
   621   00279A  0012               	return		;funcret
   622   00279C                     __end_of_Reset_Display7Seg:
   623                           	callstack 0
   624                           
   625 ;; *************** function _GPIO_Init *****************
   626 ;; Defined at:
   627 ;;		line 3 in file "gpio.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		None
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text3
   655   0026BC                     __ptext3:
   656                           	callstack 0
   657   0026BC                     _GPIO_Init:
   658                           	callstack 126
   659   0026BC                     
   660                           ;gpio.c: 7:     ANSELAbits.ANSELA3 = 0;
   661   0026BC  0104               	movlb	4	; () banked
   662   0026BE  9700               	bcf	0,3,b	;volatile
   663                           
   664                           ;gpio.c: 8:     SLRCONAbits.SLRA3 = 1;
   665   0026C0  8703               	bsf	3,3,b	;volatile
   666                           
   667                           ;gpio.c: 9:     INLVLAbits.INLVLA3 = 0;
   668   0026C2  9704               	bcf	4,3,b	;volatile
   669                           
   670                           ;gpio.c: 10:     ODCONAbits.ODCA3 = 0;
   671   0026C4  9702               	bcf	2,3,b	;volatile
   672                           
   673                           ;gpio.c: 11:     WPUAbits.WPUA3 = 0;
   674   0026C6  9701               	bcf	1,3,b	;volatile
   675                           
   676                           ;gpio.c: 12:     TRISAbits.TRISA3 = 0;
   677   0026C8  96C6               	bcf	198,3,c	;volatile
   678                           
   679                           ;gpio.c: 16:     ANSELAbits.ANSELA4 = 0;
   680   0026CA  9900               	bcf	0,4,b	;volatile
   681                           
   682                           ;gpio.c: 17:     SLRCONAbits.SLRA4 = 1;
   683   0026CC  8903               	bsf	3,4,b	;volatile
   684                           
   685                           ;gpio.c: 18:     INLVLAbits.INLVLA4 = 0;
   686   0026CE  9904               	bcf	4,4,b	;volatile
   687                           
   688                           ;gpio.c: 19:     ODCONAbits.ODCA4 = 0;
   689   0026D0  9902               	bcf	2,4,b	;volatile
   690                           
   691                           ;gpio.c: 20:     WPUAbits.WPUA4 = 0;
   692   0026D2  9901               	bcf	1,4,b	;volatile
   693                           
   694                           ;gpio.c: 21:     TRISAbits.TRISA4 = 0;
   695   0026D4  98C6               	bcf	198,4,c	;volatile
   696                           
   697                           ;gpio.c: 25:     ANSELEbits.ANSELE2 = 0;
   698   0026D6  9520               	bcf	32,2,b	;volatile
   699                           
   700                           ;gpio.c: 26:     SLRCONEbits.SLRE2 = 1;
   701   0026D8  8523               	bsf	35,2,b	;volatile
   702                           
   703                           ;gpio.c: 27:     INLVLEbits.INLVLE2 = 0;
   704   0026DA  9524               	bcf	36,2,b	;volatile
   705                           
   706                           ;gpio.c: 28:     ODCONEbits.ODCE2 = 0;
   707   0026DC  9522               	bcf	34,2,b	;volatile
   708                           
   709                           ;gpio.c: 29:     WPUEbits.WPUE2 = 0;
   710   0026DE  9521               	bcf	33,2,b	;volatile
   711                           
   712                           ;gpio.c: 30:     TRISEbits.TRISE2 = 0;
   713   0026E0  94CA               	bcf	202,2,c	;volatile
   714                           
   715                           ;gpio.c: 34:     ANSELCbits.ANSELC7 = 0;
   716   0026E2  9F10               	bcf	16,7,b	;volatile
   717                           
   718                           ;gpio.c: 35:     SLRCONCbits.SLRC7 = 1;
   719   0026E4  8F13               	bsf	19,7,b	;volatile
   720                           
   721                           ;gpio.c: 36:     INLVLCbits.INLVLC7 = 0;
   722   0026E6  9F14               	bcf	20,7,b	;volatile
   723                           
   724                           ;gpio.c: 37:     ODCONCbits.ODCC7 = 0;
   725   0026E8  9F12               	bcf	18,7,b	;volatile
   726                           
   727                           ;gpio.c: 38:     WPUCbits.WPUC7 = 0;
   728   0026EA  9F11               	bcf	17,7,b	;volatile
   729                           
   730                           ;gpio.c: 39:     TRISCbits.TRISC7 = 0;
   731   0026EC  9EC8               	bcf	200,7,c	;volatile
   732                           
   733                           ;gpio.c: 43:     ANSELDbits.ANSELD0 = 0;
   734   0026EE  9118               	bcf	24,0,b	;volatile
   735                           
   736                           ;gpio.c: 44:     SLRCONDbits.SLRD0 = 1;
   737   0026F0  811B               	bsf	27,0,b	;volatile
   738                           
   739                           ;gpio.c: 45:     INLVLDbits.INLVLD0 = 0;
   740   0026F2  911C               	bcf	28,0,b	;volatile
   741                           
   742                           ;gpio.c: 46:     ODCONDbits.ODCD0 = 0;
   743   0026F4  911A               	bcf	26,0,b	;volatile
   744                           
   745                           ;gpio.c: 47:     WPUDbits.WPUD0 = 0;
   746   0026F6  9119               	bcf	25,0,b	;volatile
   747                           
   748                           ;gpio.c: 48:     TRISDbits.TRISD0 = 0;
   749   0026F8  90C9               	bcf	201,0,c	;volatile
   750                           
   751                           ;gpio.c: 52:     ANSELDbits.ANSELD1 = 0;
   752   0026FA  9318               	bcf	24,1,b	;volatile
   753                           
   754                           ;gpio.c: 53:     SLRCONDbits.SLRD1 = 1;
   755   0026FC  831B               	bsf	27,1,b	;volatile
   756                           
   757                           ;gpio.c: 54:     INLVLDbits.INLVLD1 = 0;
   758   0026FE  931C               	bcf	28,1,b	;volatile
   759                           
   760                           ;gpio.c: 55:     ODCONDbits.ODCD1 = 0;
   761   002700  931A               	bcf	26,1,b	;volatile
   762                           
   763                           ;gpio.c: 56:     WPUDbits.WPUD1 = 0;
   764   002702  9319               	bcf	25,1,b	;volatile
   765                           
   766                           ;gpio.c: 57:     TRISDbits.TRISD1 = 0;
   767   002704  92C9               	bcf	201,1,c	;volatile
   768                           
   769                           ;gpio.c: 61:     ANSELDbits.ANSELD2 = 0;
   770   002706  9518               	bcf	24,2,b	;volatile
   771                           
   772                           ;gpio.c: 62:     SLRCONDbits.SLRD2 = 1;
   773   002708  851B               	bsf	27,2,b	;volatile
   774                           
   775                           ;gpio.c: 63:     INLVLDbits.INLVLD2 = 0;
   776   00270A  951C               	bcf	28,2,b	;volatile
   777                           
   778                           ;gpio.c: 64:     ODCONDbits.ODCD2 = 0;
   779   00270C  951A               	bcf	26,2,b	;volatile
   780                           
   781                           ;gpio.c: 65:     WPUDbits.WPUD2 = 0;
   782   00270E  9519               	bcf	25,2,b	;volatile
   783                           
   784                           ;gpio.c: 66:     TRISDbits.TRISD2 = 0;
   785   002710  94C9               	bcf	201,2,c	;volatile
   786   002712                     
   787                           ; BSR set to: 4
   788   002712  0012               	return		;funcret
   789   002714                     __end_of_GPIO_Init:
   790                           	callstack 0
   791                           
   792 ;; *************** function _Clock_Init *****************
   793 ;; Defined at:
   794 ;;		line 57 in file "config.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text4
   822   0027A4                     __ptext4:
   823                           	callstack 0
   824   0027A4                     _Clock_Init:
   825                           	callstack 126
   826   0027A4                     
   827                           ;config.c: 59:     OSCCON1 = 0b0110000;
   828   0027A4  0E30               	movlw	48
   829   0027A6  0100               	movlb	0	; () banked
   830   0027A8  6FAD               	movwf	173,b	;volatile
   831   0027AA                     
   832                           ; BSR set to: 0
   833   0027AA  0012               	return		;funcret
   834   0027AC                     __end_of_Clock_Init:
   835                           	callstack 0
   836                           
   837                           	psect	rparam
   838   000000                     
   839                           	psect	config
   840                           
   841                           ;Config register CONFIG1 @ 0x300000
   842                           ;	External Oscillator Selection
   843                           ;	FEXTOSC = OFF, Oscillator not enabled
   844                           ;	Reset Oscillator Selection
   845                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
   846   300000                     	org	3145728
   847   300000  8C                 	db	140
   848                           
   849                           ;Config register CONFIG2 @ 0x300001
   850                           ;	Clock out Enable bit
   851                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   852                           ;	PRLOCKED One-Way Set Enable bit
   853                           ;	PR1WAY = OFF, PRLOCKED bit can be set and cleared repeatedly
   854                           ;	Clock Switch Enable bit
   855                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   856                           ;	Fail-Safe Clock Monitor Enable bit
   857                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   858   300001                     	org	3145729
   859   300001  FD                 	db	253
   860                           
   861                           ;Config register CONFIG3 @ 0x300002
   862                           ;	MCLR Enable bit
   863                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   864                           ;	Power-up timer selection bits
   865                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   866                           ;	Multi-vector enable bit
   867                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   868                           ;	IVTLOCK bit One-way set enable bit
   869                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
   870                           ;	Low Power BOR Enable bit
   871                           ;	LPBOREN = OFF, Low-Power BOR disabled
   872                           ;	Brown-out Reset Enable bits
   873                           ;	BOREN = OFF, Brown-out Reset disabled
   874   300002                     	org	3145730
   875   300002  3F                 	db	63
   876                           
   877                           ;Config register CONFIG4 @ 0x300003
   878                           ;	Brown-out Reset Voltage Selection bits
   879                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
   880                           ;	ZCD Disable bit
   881                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
   882                           ;	PPSLOCK bit One-Way Set Enable bit
   883                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
   884                           ;	Stack Full/Underflow Reset Enable bit
   885                           ;	STVREN = ON, Stack full/underflow will cause Reset
   886                           ;	Low Voltage Programming Enable bit
   887                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   888                           ;	Extended Instruction Set Enable bit
   889                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   890   300003                     	org	3145731
   891   300003  FF                 	db	255
   892                           
   893                           ;Config register CONFIG5 @ 0x300004
   894                           ;	WDT Period selection bits
   895                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   896                           ;	WDT operating mode
   897                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   898   300004                     	org	3145732
   899   300004  9F                 	db	159
   900                           
   901                           ;Config register CONFIG6 @ 0x300005
   902                           ;	WDT Window Select bits
   903                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   904                           ;	WDT input clock selector
   905                           ;	WDTCCS = SC, Software Control
   906   300005                     	org	3145733
   907   300005  FF                 	db	255
   908                           
   909                           ;Config register CONFIG7 @ 0x300006
   910                           ;	Boot Block Size selection bits
   911                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   912                           ;	Boot Block enable bit
   913                           ;	BBEN = OFF, Boot block disabled
   914                           ;	Storage Area Flash enable bit
   915                           ;	SAFEN = OFF, SAF disabled
   916                           ;	Background Debugger
   917                           ;	DEBUG = ON, Background Debugger enabled
   918   300006                     	org	3145734
   919   300006  DF                 	db	223
   920                           
   921                           ;Config register CONFIG8 @ 0x300007
   922                           ;	Boot Block Write Protection bit
   923                           ;	WRTB = OFF, Boot Block not Write protected
   924                           ;	Configuration Register Write Protection bit
   925                           ;	WRTC = OFF, Configuration registers not Write protected
   926                           ;	Data EEPROM Write Protection bit
   927                           ;	WRTD = OFF, Data EEPROM not Write protected
   928                           ;	SAF Write protection bit
   929                           ;	WRTSAF = OFF, SAF not Write Protected
   930                           ;	Application Block write protection bit
   931                           ;	WRTAPP = OFF, Application Block not write protected
   932   300007                     	org	3145735
   933   300007  FF                 	db	255
   934                           
   935                           ;Config register CONFIG10 @ 0x300009
   936                           ;	PFM and Data EEPROM Code Protection bit
   937                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   938   300009                     	org	3145737
   939   300009  FF                 	db	255
   940                           tosu	equ	0x4FF
   941                           tosh	equ	0x4FE
   942                           tosl	equ	0x4FD
   943                           stkptr	equ	0x4FC
   944                           pclatu	equ	0x4FB
   945                           pclath	equ	0x4FA
   946                           pcl	equ	0x4F9
   947                           tblptru	equ	0x4F8
   948                           tblptrh	equ	0x4F7
   949                           tblptrl	equ	0x4F6
   950                           tablat	equ	0x4F5
   951                           prodh	equ	0x4F4
   952                           prodl	equ	0x4F3
   953                           indf0	equ	0x4EF
   954                           postinc0	equ	0x4EE
   955                           postdec0	equ	0x4ED
   956                           preinc0	equ	0x4EC
   957                           plusw0	equ	0x4EB
   958                           fsr0h	equ	0x4EA
   959                           fsr0l	equ	0x4E9
   960                           wreg	equ	0x4E8
   961                           indf1	equ	0x4E7
   962                           postinc1	equ	0x4E6
   963                           postdec1	equ	0x4E5
   964                           preinc1	equ	0x4E4
   965                           plusw1	equ	0x4E3
   966                           fsr1h	equ	0x4E2
   967                           fsr1l	equ	0x4E1
   968                           bsr	equ	0x4E0
   969                           indf2	equ	0x4DF
   970                           postinc2	equ	0x4DE
   971                           postdec2	equ	0x4DD
   972                           preinc2	equ	0x4DC
   973                           plusw2	equ	0x4DB
   974                           fsr2h	equ	0x4DA
   975                           fsr2l	equ	0x4D9
   976                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    10
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      22
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    Write_Display7seg@d7s	PTR struct . size(2) Largest target is 8
		 -> display1(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_Write_Display7seg

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     3      5     573
                                              6 COMRAM     8     3      5
                         _Clock_Init
                          _GPIO_Init
                  _Reset_Display7Seg
                  _Write_Display7seg
 ---------------------------------------------------------------------------------
 (1) _Write_Display7seg                                    6     3      3     505
                                              0 COMRAM     6     3      3
                  _Reset_Display7Seg
 ---------------------------------------------------------------------------------
 (2) _Reset_Display7Seg                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _GPIO_Init
   _Reset_Display7Seg
   _Write_Display7seg
     _Reset_Display7Seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlh        352      0       0      80        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      81        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhlhhl     99      0       0      76        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      16       1       23.2%
BITBIGSFRhhhhh      2F      0       0      71        0.0%
BITBIGSFRhhlll       B      0       0      79        0.0%
BITBIGSFRhhhhl       4      0       0      72        0.0%
BITBIGSFRhhlhhh      3      0       0      74        0.0%
BITBIGSFRhhllhh      3      0       0      77        0.0%
BITBIGSFRhhllhh      3      0       0      78        0.0%
BITBIGSFRhhlhhh      1      0       0      75        0.0%
BITBIGSFRhhhll       1      0       0      73        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      58        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 09 23:42:23 2024

                       l93 27AA                         l79 2712                        l124 26BA  
                      l127 279A       Write_Display7seg@d7s 0501                        l803 278C  
                      l805 27A4                        l901 265C                        l807 26BC  
                      l903 2684                        l911 271C                        l905 2692  
                      l921 2734                        l913 2720                        l923 274C  
                      l907 2714                        l925 274E                        l909 2718  
                      l919 2724                        l881 2552                        l873 250C  
                      l891 25E2                        l883 2576                        l875 2528  
                      l893 25F0                        l885 2584                        l877 2540  
                      l895 2618                        l887 25AC                        l879 2544  
                      l897 2626                        l889 25BA                        l899 264E  
                      u200 2584                        u201 2580                        u300 2692  
                      u220 25BA                        u301 268E                        u221 25B6  
                      u214 25A2                        u215 259E                        u240 25F0  
                      u320 275E                        u241 25EC                        u321 275A  
                      u314 26B0                        u234 25D8                        u170 2528  
                      u315 26AC                        u235 25D4                        u171 2524  
                      u260 2626                        u180 2552                        u261 2622  
                      u181 254E                        u254 260E                        u255 260A  
                      u280 265C                        u281 2658                        u337 273E  
                      u274 2644                        u194 256C                        u275 2640  
                      u195 2568                        u294 267A                        u295 2676  
     Write_Display7seg@val 0503          _Write_Display7seg 250C                        wreg 04E8  
       ?_Write_Display7seg 0501                       _LATA 04BE                       _LATC 04C0  
                     _LATD 04C1                       _LATE 04C2      Write_Display7seg@data 0506  
      ??_Write_Display7seg 0504                       _main 2714                       fsr2h 04DA  
                     indf2 04DF                       fsr1l 04E1                       fsr2l 04D9  
                     start FFFC               ___param_bank 0000                 _Clock_Init 27A4  
                    ?_main 0507  __end_of_Write_Display7seg 26BC                      main@i 050E  
                    tablat 04F5                      status 04D8            __initialization 2766  
             __end_of_main 2766                     ??_main 050C              __activetblptr 0003  
        __end_of_GPIO_Init 2714                ?_Clock_Init 0501                     isa$std 0001  
             __pdataCOMRAM 050F               __mediumconst 0000                     tblptrh 04F7  
                   tblptrl 04F6                     tblptru 04F8                 __accesstop 0560  
  __end_of__initialization 2786              ___rparam_used 0001          _Reset_Display7Seg 278C  
       ?_Reset_Display7Seg 0501             __pcstackCOMRAM 0501        ??_Reset_Display7Seg 0501  
__end_of_Reset_Display7Seg 279C                    _OSCCON1 00AD                    __Hparam 0000  
                  __Lparam 0000               __psmallconst 2500                    __pcinit 2766  
                  __ramtop 2500                    __ptext0 2714                    __ptext1 250C  
                  __ptext2 278C                    __ptext3 26BC                    __ptext4 27A4  
                _GPIO_Init 26BC       end_of_initialization 2786                    postdec1 04E5  
                  postinc0 04EE               ??_Clock_Init 0501                  _PORTBbits 04CF  
                _PORTCbits 04D0      __end_of_display7seg_c 250B                  _TRISAbits 04C6  
                _TRISCbits 04C8                  _TRISDbits 04C9                  _TRISEbits 04CA  
               ?_GPIO_Init 0501         __end_of_Clock_Init 27AC              __pidataCOMRAM 279C  
      start_initialization 2766                ??_GPIO_Init 0501                __smallconst 2500  
                 _LATAbits 04BE                   _LATCbits 04C0                   _LATDbits 04C1  
                 _LATEbits 04C2                   _WPUAbits 0401                   _WPUCbits 0411  
                 _WPUDbits 0419                   _WPUEbits 0421                  copy_data0 277A  
                 __Hrparam 0000                   __Lrparam 0000                 _ANSELAbits 0400  
               _ANSELCbits 0410                 _ANSELDbits 0418                 _ANSELEbits 0420  
                 _display1 050F                   isa$xinst 0000                 _ODCONAbits 0402  
               _ODCONCbits 0412                 _ODCONDbits 041A                 _ODCONEbits 0422  
                 main@argc 0507                   main@argv 0509                 _INLVLAbits 0404  
               _INLVLCbits 0414                 _INLVLDbits 041C                 _INLVLEbits 0424  
              _SLRCONAbits 0403                _SLRCONCbits 0413                _SLRCONDbits 041B  
              _SLRCONEbits 0423              _display7seg_c 2501  
